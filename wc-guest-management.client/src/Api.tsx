/* Generated by restful-react */

import React from "react";
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from "restful-react";

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export interface Guest {
  _id?: string | null;
  visitDate: string;
  tableNumber: number;
  volunteer: string;
  guest: string;
  age?: number | null;
  birthDate?: string | null;
  mobile?: string | null;
  email?: string | null;
  civilStatus?: string | null;
  cityOfResidence?: string | null;
  cityOfWorkplace?: string | null;
  category?: string | null;
  series?: number | null;
  createdDate?: string | null;
  [key: string]: any;
}

export interface InfoSlip {
  visitDate: string;
  tableNumber?: number | null;
  volunteer: string;
  guests: string;
  [key: string]: any;
}

export interface FetchGuestsQueryParams {
  byVisitDate?: string;
  byCriteria?: string;
}

export type FetchGuestsProps = Omit<GetProps<Guest[], unknown, FetchGuestsQueryParams>, "path">;

export const FetchGuests = (props: FetchGuestsProps) => (
  <Get<Guest[], unknown, FetchGuestsQueryParams>
    path={`/api/guest`}
    {...props}
  />
);

export type UseFetchGuestsProps = Omit<UseGetProps<Guest[], FetchGuestsQueryParams>, "path">;

export const useFetchGuests = (props: UseFetchGuestsProps) => useGet<Guest[], unknown, FetchGuestsQueryParams>(`/api/guest`, props);


export interface WelcomeRequestBody {
  infoSlip: InfoSlip;
  print?: boolean;
}

export type WelcomeProps = Omit<MutateProps<Guest[], unknown, void, WelcomeRequestBody>, "path" | "verb">;

export const Welcome = (props: WelcomeProps) => (
  <Mutate<Guest[], unknown, void, WelcomeRequestBody>
    verb="POST"
    path={`/api/guest/welcome`}
    {...props}
  />
);

export type UseWelcomeProps = Omit<UseMutateProps<Guest[], void, WelcomeRequestBody>, "path" | "verb">;

export const useWelcome = (props: UseWelcomeProps) => useMutate<Guest[], unknown, void, WelcomeRequestBody>("POST", `/api/guest/welcome`, props);

